title: Overview
icon: m3o:home
path: overview
type: sections
max_columns: 4
sections:
  - type: grid
    cards:
      - type: custom:mushroom-title-card
        title: |
          {% set time = now().hour %} {% if time >= 18 %}
            🌙 Guten Abend, {{ user }}!
          {% elif time >= 12 %}
            ☀️ Guten Nachmittag, {{ user }}!
          {% elif time >= 5 %}
            🌅 Guten Morgen, {{ user }}!
          {% else %}
            🌌 Hallo, {{ user }}!
          {% endif %}
        card_mod:
          style: |
            ha-card {
              --title-font-size: 26px !important;
            }
      - type: custom:paper-buttons-row
        styles:
          justify-content: flex-start
          flex-wrap: wrap
          font-size: 0.9em
          line-height: 1.2em
          margin: 6px 0 20px 0
          width: 100%
        buttons:
          - layout: name
            name: Outside is
            styles:
              button:
                flex-basis: 1
                flex-shrink: 0
              name:
                color: var(--primary-text-color)
            tap_action:
              action: none
          - layout: name|icon
            entity: weather.met_service_home_forecast
            name: >-
              {{ state_attr('weather.forecast_home', 'temperature') }} °C,
              {{ states('weather.met_service_home_forecast') | title }}
            icon: "{{ states('sensor.weather_condition_icon') }}"
            tap_action:
              action: navigate
              navigation_path: "#weather"
            styles:
              icon:
                color: var(--md-sys-color-on-primary)
              name:
                color: var(--md-sys-color-on-primary)
                font-weight: bold
              button:
                padding: 2px 8px
                background-color: var(--md-sys-color-primary)
                border-radius: 24px
                flex-basis: 1
                flex-shrink: 0
                display: flex
          - layout: name
            name: · Wind
            styles:
              button:
                flex-basis: 1
                flex-shrink: 0
              name:
                color: var(--primary-text-color)
            tap_action:
              action: none
          - layout: name
            entity: weather.met_service_home_forecast
            name: >-
              {% set weather = states.weather.forecast_home.attributes %} {{
              weather.wind_speed }} {{ weather.wind_speed_unit }}
            tap_action:
              action: navigate
              navigation_path: "#weather"
            styles:
              name:
                color: var(--md-sys-color-on-primary)
                font-weight: bold
              button:
                padding: 2px 8px
                background-color: var(--md-sys-color-primary)
                border-radius: 24px
                flex-basis: 1
                flex-shrink: 0
                display: flex
          - layout: name
            name: · High
            styles:
              button:
                flex-basis: 1
                flex-shrink: 0
              name:
                color: var(--primary-text-color)
            tap_action:
              action: none
          - layout: name
            entity: weather.met_service_home_forecast
            name: >-
              {% set forecast =
              state_attr('sensor.daily_weather_data_met_service',
              'forecast_data') %} {% if forecast is defined and
              forecast.temperature is defined %}
                {{ forecast.temperature }} °C🔺
              {% else %}
                N/A °C🔺
              {% endif %}
            tap_action:
              action: navigate
              navigation_path: "#weather-forecast"
            styles:
              name:
                color: var(--md-sys-color-on-primary)
                font-weight: bold
              button:
                padding: 2px 8px
                background-color: var(--md-sys-color-primary)
                border-radius: 24px
                flex-basis: 1
                flex-shrink: 0
                display: flex
          - layout: name
            name: Low
            styles:
              button:
                flex-basis: 1
                flex-shrink: 0
              name:
                color: var(--primary-text-color)
            tap_action:
              action: none
          - layout: name
            entity: weather.met_service_home_forecast
            name: >-
              {% set forecast =
              state_attr('sensor.daily_weather_data_met_service',
              'forecast_data') %} {% if forecast is defined and
              forecast.temperature is defined %}
                {{ forecast.templow }} °C🔻
              {% else %}
                N/A °C🔻
              {% endif %}
            tap_action:
              action: navigate
              navigation_path: "#weather-forecast"
            styles:
              name:
                color: var(--md-sys-color-on-primary)
                font-weight: bold
              button:
                padding: 2px 8px
                background-color: var(--md-sys-color-primary)
                border-radius: 24px
                flex-basis: 1
                flex-shrink: 0
                display: flex
      - type: custom:simple-tabs
        pre-load: true
        active-background: var(--md-sys-color-tertiary)
        active-text-color: var(--md-sys-color-on-tertiary)
        tabs:
          - title: Home
            icon: m3of:home
            card:
              type: vertical-stack
              cards:
                - type: conditional
                  conditions:
                    - condition: state
                      entity: switch.all_water_taps
                      state: "on"
                  card:
                    type: custom:simple-swipe-card
                    view_mode: carousel
                    card_min_width: 300
                    card_spacing: 0
                    show_pagination: false
                    auto_hide_pagination: 0
                    cards:
                      - type: custom:vertical-stack-in-card
                        cards:
                          - type: grid
                            square: false
                            columns: 2
                            cards:
                              - type: custom:mushroom-template-card
                                entity: sensor.house_average_temperature
                                primary: |
                                  {{ states(entity) | round(1) }}°C
                                secondary: |
                                  {{ state_attr(entity,'friendly_name') }}
                                icon: >
                                  {% set hvac_mode =
                                  states('climate.heat_pump') %}

                                  {% if hvac_mode == 'heat' %} mdi:fire

                                  {% elif hvac_mode == 'cool' %}
                                  mdi:snowflake

                                  {% elif hvac_mode == 'fan_only' %} mdi:fan

                                  {% else %} m3of:thermometer

                                  {% endif %}
                                tap_action:
                                  action: more-info
                                color: >
                                  {% set hvac_mode =
                                  states('climate.heat_pump') %}

                                  {% if hvac_mode == 'heat' %} #FF6F22

                                  {% elif hvac_mode == 'cool' %} #2196F3

                                  {% elif hvac_mode == 'fan_only' %} #029688

                                  {% else %}
                                    {% set temp = states('sensor.house_average_temperature') | float %}
                                    {% if temp < 16 %} #CEB2F5
                                    {% elif temp < 18 %} #5EBDEE
                                    {% elif temp < 22 %} #9cc8b8
                                    {% elif temp < 24 %} #e7b562
                                    {% elif temp < 27 %} #FF564B
                                    {% else %} #99332d
                                    {% endif %}
                                  {% endif %}
                                features_position: bottom
                              - type: custom:mushroom-template-card
                                entity: sensor.outdoor_temperature
                                primary: |
                                  {{ states(entity) | round(1) }}°C
                                secondary: |
                                  Outdoor Feels Like
                                icon: >-
                                  {{ states('sensor.weather_condition_icon')
                                  }}
                                icon_color: >
                                  {% set temp =
                                  state_attr('weather.forecast_home',
                                  'temperature') | float %}

                                  {% if temp < 16 %} #907CAB

                                  {% elif temp < 19 %} #4790b6

                                  {% elif temp < 22 %} #77998c

                                  {% elif temp < 24 %} #b08a4a

                                  {% elif temp < 27 %} #c34139      

                                  {% else %} #752722 {% endif %}
                                tap_action:
                                  action: navigate
                                  navigation_path: "#weather"
                          - type: custom:config-template-card
                            entities:
                              - sensor.house_average_temperature
                              - sensor.outdoor_temperature
                              - climate.heat_pump
                            variables:
                              - states['climate.heat_pump'].state
                              - >-
                                states['sensor.house_average_temperature'].state
                              - states['sensor.outdoor_temperature'].state
                            card:
                              type: custom:mini-graph-card
                              entities:
                                - entity: sensor.house_average_temperature
                                  name: House Average Temperature
                                  color: |-
                                    ${vars[0] === 'heat' ? '#FF6F22' : 
                                      (vars[0] === 'cool' ? '#2196F3' : 
                                      (vars[0] === 'fan_only' ? '#029688' : 
                                      (vars[1] < 16 ? '#CEB2F5' :
                                      (vars[1] < 18 ? '#5EBDEE' :
                                      (vars[1] < 22 ? '#9cc8b8' :
                                      (vars[1] < 24 ? '#e7b562' :
                                      (vars[1] < 27 ? '#FF564B' : '#99332d')))))))}
                                - entity: sensor.outdoor_temperature
                                  name: Outdoor Temperature
                                  color: |-
                                    ${vars[2] < 16 ? '#907CAB' :
                                      (vars[2] < 18 ? '#4790b6' :        
                                      (vars[2] < 22 ? '#77998c' :
                                      (vars[2] < 24 ? '#b08a4a' :
                                      (vars[2] < 27 ? '#c34139' :'#752722'))))}
                                  y_axis: secondary
                              hours_to_show: 24
                              line_width: 3
                              font_size: 50
                              animate: true
                              show:
                                name: false
                                icon: false
                                state: false
                                legend: false
                                fill: fade
                          - type: horizontal-stack
                            cards:
                              - type: custom:mushroom-climate-card
                                entity: climate.heat_pump
                                primary_info: none
                                secondary_info: none
                                icon_type: none
                                show_temperature_control: true
                              - type: custom:mushroom-climate-card
                                entity: climate.heat_pump
                                primary_info: none
                                secondary_info: none
                                icon_type: none
                                hvac_modes:
                                  - cool
                                  - heat
                                  - fan_only
                                  - "off"
                      - type: custom:vertical-stack-in-card
                        cards:
                          - type: custom:mushroom-template-card
                            entity: switch.right_walkway_water_tap
                            primary: >
                              {{
                              states('sensor.right_walkway_water_tap_flow')
                              | round(1) }} m³/h
                            secondary: >
                              {% if
                              is_state('switch.right_walkway_water_tap',
                              'on') %}
                                Running for {{
                                  ((as_timestamp(now()) - as_timestamp(states.switch.right_walkway_water_tap.last_changed)) / 60) | int
                                }} minutes
                              {% else %}
                                Water Flow Rate
                              {% endif %}
                            icon: m3of:sprinkler
                            tap_action:
                              action: toggle
                            color: >
                              {% set flow =
                              states('sensor.right_walkway_water_tap_flow')
                              | float %}

                              {% if flow < 0.1 %} #A9A9A9

                              {% elif flow < 0.3 %} #ffd34f

                              {% elif flow < 0.6 %} #9fe7e8

                              {% else %} #36a9e2

                              {% endif %}
                            features_position: bottom
                          - type: custom:config-template-card
                            entities: sensor.right_walkway_water_tap_flow
                            variables:
                              - >-
                                states['sensor.right_walkway_water_tap_flow'].state
                            card:
                              type: custom:mini-graph-card
                              entities:
                                - entity: sensor.right_walkway_water_tap_flow
                                  name: Water Flow
                                  color: |-
                                    ${vars[0] < 0.1 ? '#a9a9a9' :     
                                      (vars[0] < 0.3 ? '#ffd34f' :
                                      (vars[0] < 0.6 ? '#9fe7e8' : '#36a9e2'))}
                              hours_to_show: 24
                              line_width: 3
                              font_size: 50
                              animate: true
                              show:
                                name: false
                                icon: false
                                state: false
                                legend: false
                                fill: fade
                          - type: custom:mushroom-template-card
                            entity: sensor.current_water_restriction
                            primary: >
                              {{ states('sensor.current_water_restriction')
                              }}
                            tap_action:
                              action: more-info
                            icon: >
                              {% if is_state('input_boolean.water_level_1',
                              'on') %}
                                mdi:numeric-1-box-outline
                              {% elif
                              is_state('input_boolean.water_level_2', 'on')
                              %}
                                mdi:numeric-2-box-outline
                              {% elif
                              is_state('input_boolean.water_level_3', 'on')
                              %}
                                mdi:numeric-3-box-outline
                              {% elif
                              is_state('input_boolean.water_level_4', 'on')
                              %}
                                mdi:numeric-4-box-outline
                              {% else %}
                                mdi:water
                              {% endif %}
                            color: >
                              {% if is_state('input_boolean.water_level_1',
                              'on') %}
                                #DFFF00
                              {% elif
                              is_state('input_boolean.water_level_2', 'on')
                              %}
                                #FFFF00
                              {% elif
                              is_state('input_boolean.water_level_3', 'on')
                              %}
                                #FFA500
                              {% elif
                              is_state('input_boolean.water_level_4', 'on')
                              %}
                                #FF0000
                              {% else %}
                                #89CFF0
                              {% endif %}
                            features_position: bottom
                - type: conditional
                  conditions:
                    - condition: state
                      entity: switch.all_water_taps
                      state: "off"
                  card:
                    type: custom:vertical-stack-in-card
                    cards:
                      - type: grid
                        square: false
                        columns: 2
                        cards:
                          - type: custom:mushroom-template-card
                            entity: sensor.house_average_temperature
                            primary: |
                              {{ states(entity) | round(1) }} °C
                            secondary: |
                              {{ state_attr(entity,'friendly_name') }}
                            icon: >
                              {% set hvac_mode = states('climate.heat_pump')
                              %}

                              {% if hvac_mode == 'heat' %} mdi:fire

                              {% elif hvac_mode == 'cool' %} mdi:snowflake

                              {% elif hvac_mode == 'fan_only' %} mdi:fan

                              {% else %} m3of:thermometer

                              {% endif %}
                            icon_color: >
                              {% set hvac_mode = states('climate.heat_pump')
                              %}

                              {% if hvac_mode == 'heat' %} #FF6F22

                              {% elif hvac_mode == 'cool' %} #2196F3

                              {% elif hvac_mode == 'fan_only' %} #029688

                              {% else %}
                                {% set temp = states('sensor.house_average_temperature') | float %}
                                {% if temp < 16 %} #CEB2F5
                                {% elif temp < 18 %} #5EBDEE
                                {% elif temp < 22 %} #9cc8b8
                                {% elif temp < 24 %} #e7b562
                                {% elif temp < 27 %} #FF564B
                                {% else %} #99332d
                                {% endif %}
                              {% endif %}
                            tap_action:
                              action: more-info
                          - type: custom:mushroom-template-card
                            entity: sensor.outdoor_temperature
                            primary: |
                              {{ states(entity) | round(1) }} °C
                            secondary: |
                              Outdoor Feels Like
                            icon: "{{ states('sensor.weather_condition_icon') }}"
                            icon_color: >
                              {% set temp =
                              state_attr('weather.forecast_home',
                              'temperature') | float %}

                              {% if temp < 16 %} #907CAB

                              {% elif temp < 19 %} #4790b6

                              {% elif temp < 22 %} #77998c

                              {% elif temp < 24 %} #b08a4a

                              {% elif temp < 27 %} #c34139      

                              {% else %} #752722 {% endif %}
                            tap_action:
                              action: navigate
                              navigation_path: "#weather"
                      - type: custom:config-template-card
                        entities:
                          - sensor.house_average_temperature
                          - sensor.outdoor_temperature
                          - climate.heat_pump
                        variables:
                          - states['climate.heat_pump'].state
                          - states['sensor.house_average_temperature'].state
                          - states['sensor.outdoor_temperature'].state
                        card:
                          type: custom:mini-graph-card
                          entities:
                            - entity: sensor.house_average_temperature
                              name: House Average Temperature
                              color: |-
                                ${vars[0] === 'heat' ? '#FF6F22' : 
                                  (vars[0] === 'cool' ? '#2196F3' : 
                                  (vars[0] === 'fan_only' ? '#029688' : 
                                  (vars[1] < 16 ? '#CEB2F5' :
                                  (vars[1] < 18 ? '#5EBDEE' :
                                  (vars[1] < 22 ? '#9cc8b8' :
                                  (vars[1] < 24 ? '#e7b562' :
                                  (vars[1] < 27 ? '#FF564B' : '#99332d')))))))}
                            - entity: sensor.outdoor_temperature
                              name: Outdoor Temperature
                              color: |-
                                ${vars[2] < 16 ? '#907CAB' :
                                  (vars[2] < 18 ? '#4790b6' :        
                                  (vars[2] < 22 ? '#77998c' :
                                  (vars[2] < 24 ? '#b08a4a' :
                                  (vars[2] < 27 ? '#c34139' :'#752722'))))}
                              y_axis: secondary
                          hours_to_show: 24
                          line_width: 3
                          font_size: 50
                          animate: true
                          show:
                            name: false
                            icon: false
                            state: false
                            legend: false
                            fill: fade
                      - type: horizontal-stack
                        cards:
                          - type: custom:mushroom-climate-card
                            entity: climate.heat_pump
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            show_temperature_control: true
                          - type: custom:mushroom-climate-card
                            entity: climate.heat_pump
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            hvac_modes:
                              - cool
                              - heat
                              - fan_only
                              - "off"
                - type: custom:simple-swipe-card
                  auto_hide_pagination: 0
                  cards:
                    - type: custom:vertical-stack-in-card
                      cards:
                        - type: custom:mushroom-template-card
                          tap_action:
                            action: none
                          hold_action:
                            action: none
                          double_tap_action:
                            action: none
                          features_position: bottom
                        - type: custom:button-card
                          show_name: false
                          show_icon: false
                          tap_action:
                            action: none
                          styles:
                            card:
                              - background: none
                              - box-shadow: none
                  card_mod:
                    style: |
                      :host {
                        --simple-swipe-card-pagination-dot-active-color: var(--md-sys-color-tertiary);
                        --simple-swipe-card-pagination-dot-inactive-color: var(--md-sys-color-on-tertiary);
                        --simple-swipe-card-pagination-dot-size: 7px;
                      }
                - entities:
                    - entity: calendar.1
                      accent_color: "#ff6a6a"
                    - entity: calendar.2
                      accent_color: "#71c8fe"
                  days_to_show: 10
                  compact_events_to_show: 10
                  background_color: transparent
                  vertical_line_width: 5px
                  event_spacing: 6px
                  first_day_of_week: monday
                  show_week_numbers: iso
                  week_number_color: var(--md-sys-color-on-primary)
                  week_number_background_color: var(--md-sys-color-primary)
                  month_separator_width: 1px
                  month_separator_color: var(--md-sys-color-tertiary)
                  today_indicator: pulse
                  today_indicator_position: 10% 50%
                  today_indicator_color: var(--md-sys-color-primary)
                  weekday_font_size: 12px
                  month_font_size: 10px
                  show_countdown: true
                  show_progress_bar: true
                  progress_bar_color: var(--md-sys-color-primary)
                  weather:
                    position: event
                    date:
                      show_conditions: true
                      show_high_temp: true
                      show_low_temp: false
                      icon_size: 14px
                      font_size: 12px
                      color: var(--primary-text-color)
                    event:
                      show_conditions: true
                      show_temp: true
                      icon_size: 14px
                      font_size: 12px
                      color: var(--primary-text-color)
                    entity: weather.met_service_home_forecast
                  tap_action:
                    action: expand
                  type: custom:calendar-card-pro
          - title: Environment
            icon: mdi:weather-partly-cloudy
            card:
              type: horizontal-stack
              cards:
                - type: vertical-stack
                  cards:
                    - type: custom:decluttering-card
                      template: mushroom_title_card
                      variables:
                        - title: Humidity
                    - type: custom:vertical-stack-in-card
                      cards:
                        - type: custom:decluttering-card
                          template: humidity_entity
                          variables:
                            - entity: sensor.living_area_humidity
                            - name: Living
                            - icon: m3of:chair
          - title: Musik
            icon: m3of:play-circle
            card:
              type: vertical-stack
              cards:
                - type: conditional
                  conditions:
                    - condition: state
                      entity: light.all_lights
                      state: "on"
                  card:
                    type: custom:decluttering-card
                    template: mushroom_title_card
                    variables:
                      - title: Lights
                - type: custom:auto-entities
                  card:
                    square: false
                    type: grid
                    columns: 2
                  card_param: cards
                  filter:
                    include:
                      - group: light.all_lights
                        entity_id: light.lights_*
                        state: "on"
                        options:
                          type: custom:google-slider-card
                          entity: this.entity_id
                          show_percentage: true
                          bold_text: false
                          control_type: light
                      - group: light.all_lights
                        entity_id: "*led*"
                        state: "on"
                        options:
                          type: custom:google-slider-card
                          entity: this.entity_id
                          icon: mdi:led-strip-variant
                          show_percentage: true
                          bold_text: false
                          control_type: light
                    exclude: []
                  show_empty: false
                  sort:
                    method: entity_id
                - type: vertical-stack
                  cards:
                    - type: conditional
                      conditions:
                        - condition: state
                          entity: switch.all_light_switches
                          state: "on"
                      card:
                        type: custom:decluttering-card
                        template: mushroom_title_card
                        variables:
                          - title: Light Switches
                    - type: custom:auto-entities
                      card:
                        square: false
                        type: grid
                        columns: 2
                      card_param: cards
                      filter:
                        include:
                          - group: switch.all_light_switches
                            entity_id: "*switch*"
                            state: "on"
                            options:
                              type: custom:material-button-card
                              use_default_icon: false
                              use_default_toggle: true
                              use_default_text: true
                              entity: this.entity_id
                              icon: m3of:lightbulb
                              height: 97
                              control_type: generic
                              dual_icon: true
                              icon_on: m3of:lightbulb
                              icon_off: m3of:light-off
                        exclude: []
                      show_empty: false
                      sort:
                        method: entity_id
                - type: vertical-stack
                  cards:
                    - type: conditional
                      conditions:
                        - condition: state
                          entity: fan.all_fans
                          state: "on"
                      card:
                        type: custom:decluttering-card
                        template: mushroom_title_card
                        variables:
                          - title: Fans
                    - type: custom:auto-entities
                      card:
                        square: false
                        type: grid
                        columns: 2
                      card_param: cards
                      filter:
                        include:
                          - group: fan.all_fans
                            state: "on"
                            options:
                              type: custom:material-button-card
                              use_default_icon: false
                              use_default_toggle: true
                              use_default_text: true
                              entity: this.entity_id
                              height: 97
                              control_type: generic
                              dual_icon: true
                        exclude: []
                      show_empty: false
                      sort:
                        method: friendly_name
  - type: grid
    cards:
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: "#notifications"
            margin_top_mobile: calc(96vh - 800px)
            name: Notifications
            icon: m3of:notifications
            styles: |-
              #root {
                      height: unset !important;
                      max-height: 100% !important;
                      transition: transform var(--md-sys-motion-expressive-spatial-default) !important;
                    }
                    .bubble-pop-up-container {
                      padding-bottom: 64px !important;

                    }
            bg_color: var(--card-background-color)
            button_type: name
          - type: custom:mushroom-chips-card
            chips:
              - type: conditional
                conditions:
                  - condition: numeric_state
                    entity: sensor.soil_sensor_corner_moisture
                    below: 40
                chip:
                  type: template
                  entity: sensor.soil_sensor_corner_moisture
                  icon: mdi:water-percent
                  content: "{{ states('sensor.soil_sensor_corner_moisture') }}%"
                  icon_color: >
                    {% set moisture =
                    states('sensor.soil_sensor_corner_moisture') | int(0) %}
                    {% if moisture >= 40 %}
                      green
                    {% elif moisture >= 25 %}
                      yellow
                    {% else %}
                      red
                    {% endif %}
                  tap_action:
                    action: more-info
              - type: conditional
                conditions:
                  - condition: state
                    entity: sensor.house_maintenance_chip_card
                    state: "true"
                chip:
                  type: template
                  entity: sensor.house_maintenance_chip_card
                  icon: |
                    {% if is_state('input_boolean.rubbish', 'on') %}
                      mdi:trash-can
                    {% elif is_state('input_boolean.recycle', 'on') %}
                      mdi:recycle
                    {% else %} {% endif %}
                  icon_color: |
                    {% if is_state('input_boolean.rubbish', 'on') %}
                      #C41E3A
                    {% elif is_state('input_boolean.recycle', 'on') %}
                      #50C878
                    {% else %} {% endif %}
                  content: |
                    {% if is_state('input_boolean.rubbish', 'on') %}
                      Rubbish Day
                    {% elif is_state('input_boolean.recycle', 'on') %}
                      Recycle Day
                    {% else %} {% endif %}
                  tap_action:
                    action: more-info
              - type: conditional
                conditions:
                  - condition: state
                    entity: binary_sensor.all_doors
                    state: "on"
                chip:
                  type: template
                  entity: binary_sensor.all_doors
                  content: |
                    {{ expand('binary_sensor.all_doors')
                        | selectattr('state', 'eq', 'on') 
                        | map(attribute='name') 
                        | join(', ') }}
                  icon: |
                    {% set open_doors = expand('binary_sensor.all_doors')
                        | selectattr('state', 'eq', 'on')
                        | list | count %}
                    {{ 'm3o:door-open' if open_doors > 0 else '' }}
                  icon_color: red
                  tap_action:
                    action: more-info
              - type: conditional
                conditions:
                  - condition: state
                    entity: sensor.laundry_machine_state
                    state: Delay Run
                chip:
                  type: entity
                  entity: sensor.laundry_delay_time_remaining
                  icon_color: blue
                  icon: m3of:timer-arrow-down
                  tap_action:
                    action: more-info
              - type: conditional
                conditions:
                  - condition: state
                    entity: sensor.laundry_machine_state
                    state: Run
                chip:
                  type: entity
                  entity: sensor.laundry_time_remaining
                  icon: m3of:laundry
                  icon_color: blue
                  tap_action:
                    action: more-info
              - type: conditional
                conditions:
                  - condition: numeric_state
                    entity: sensor.dryer_switch_lr_power
                    above: 10
                chip:
                  type: template
                  entity: sensor.dryer_switch_lr_power
                  tap_action:
                    action: more-info
                  icon: mdi:tumble-dryer
                  icon_color: "#880808"
                  content: Dryer Running
              - type: conditional
                conditions:
                  - condition: or
                    conditions:
                      - condition: state
                        entity: media_player.all_speakers
                        state: playing
                      - condition: state
                        entity: media_player.all_speakers
                        state: "on"
                chip:
                  type: template
                  entity: media_player.all_speakers
                  content: |
                    {{ expand(states.media_player.all_speakers)
                        | selectattr('state', 'eq', 'playing')
                        | list | count }}
                  icon: m3of:music-note
                  icon_color: var(--primary-text-color)
                  tap_action:
                    action: more-info
            alignment: start
          - type: conditional
            conditions:
              - condition: state
                entity: binary_sensor.doors_grg
                state: "on"
            card:
              type: vertical-stack
              cards:
                - type: custom:mushroom-chips-card
                  alignment: start
                  chips:
                    - type: template
                      entity: switch.light_switch_drw
                      icon: m3of:lightbulb
                      tap_action:
                        action: toggle
                      content: Driveway Light
                      card_mod:
                        style:
                          .: |
                            ha-card {
                              --text-color: {{ 'var(--primary-background-color)' if is_state('switch.light_switch_drw', 'on') else 'none' }};
                              --color: {{ 'var(--md-sys-color-on-primary)'  if is_state('switch.light_switch_drw', 'on') else 'none' }};
                              --chip-background: {{ 'var(--md-sys-color-primary)' if is_state('switch.light_switch_drw', 'on') else 'color-mix(in srgb, var(--md-sys-color-surface-variant) 40%, transparent)' }};
                            }
                    - type: template
                      entity: switch.porch_light_drw
                      icon: m3of:lightbulb
                      tap_action:
                        action: toggle
                      content: Porch Light
                      card_mod:
                        style:
                          .: |
                            ha-card {
                              --text-color: {{ 'var(--primary-background-color)' if is_state('switch.porch_light_drw', 'on') else 'none' }};
                              --color: {{ 'var(--md-sys-color-on-primary)'  if is_state('switch.porch_light_drw', 'on') else 'none' }};
                              --chip-background: {{ 'var(--md-sys-color-primary)' if is_state('switch.porch_light_drw', 'on') else 'color-mix(in srgb, var(--md-sys-color-surface-variant) 40%, transparent)' }};
                            }
          - type: conditional
            conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity: input_boolean.rubbish
                    state: "on"
                  - condition: state
                    entity: input_boolean.recycle
                    state: "on"
            card:
              type: vertical-stack
              cards:
                - type: custom:mushroom-chips-card
                  alignment: start
                  chips:
                    - type: template
                      entity: switch.light_switch_drw
                      icon: m3of:lightbulb
                      tap_action:
                        action: toggle
                      content: Driveway Light
                      card_mod:
                        style:
                          .: |
                            ha-card {
                              --text-color: {{ 'var(--primary-background-color)' if is_state('switch.light_switch_drw', 'on') else 'none' }};
                              --color: {{ 'var(--md-sys-color-on-primary)'  if is_state('switch.light_switch_drw', 'on') else 'none' }};
                              --chip-background: {{ 'var(--md-sys-color-primary)' if is_state('switch.light_switch_drw', 'on') else 'color-mix(in srgb, var(--md-sys-color-surface-variant) 40%, transparent)' }};
                            }
                    - type: template
                      entity: switch.porch_light_drw
                      icon: m3of:lightbulb
                      tap_action:
                        action: toggle
                      content: Porch Light
                      card_mod:
                        style:
                          .: |
                            ha-card {
                              --text-color: {{ 'var(--primary-background-color)' if is_state('switch.porch_light_drw', 'on') else 'none' }};
                              --color: {{ 'var(--md-sys-color-on-primary)'  if is_state('switch.porch_light_drw', 'on') else 'none' }};
                              --chip-background: {{ 'var(--md-sys-color-primary)' if is_state('switch.porch_light_drw', 'on') else 'color-mix(in srgb, var(--md-sys-color-surface-variant) 40%, transparent)' }};
                            }
          - type: grid
            columns: 2
            square: false
            cards:
              - type: conditional
                conditions:
                  - condition: or
                    conditions:
                      - condition: state
                        entity: binary_sensor.show_wash_cuddly_timer
                        state: "on"
                      - condition: state
                        entity: timer.wash_cuddly
                        state: idle
                card:
                  type: custom:timer-bar-card
                  entity: timer.wash_cuddly
                  invert: true
                  bar_direction: rtl
                  bar_width: 60%
                  mushroom:
                    layout: vertical
                    color: "#f385bc"
              - type: conditional
                conditions:
                  - condition: state
                    entity: timer.heated_towel_rails
                    state: active
                card:
                  type: custom:timer-bar-card
                  entity: timer.heated_towel_rails
                  invert: true
                  bar_direction: rtl
                  bar_width: 60%
                  mushroom:
                    layout: vertical
                    color: orange
              - type: conditional
                conditions:
                  - condition: state
                    entity: timer.exhaust_fans
                    state: active
                card:
                  type: custom:timer-bar-card
                  entity: timer.exhaust_fans
                  invert: true
                  bar_direction: rtl
                  bar_width: 60%
                  mushroom:
                    layout: vertical
                    color: "#b5e0f7"
              - type: conditional
                conditions:
                  - condition: state
                    entity: timer.rice_cooker
                    state: active
                card:
                  type: custom:timer-bar-card
                  entity: timer.rice_cooker
                  invert: true
                  bar_direction: rtl
                  bar_width: 60%
                  mushroom:
                    layout: vertical
                    color: "#D70040"
              - type: conditional
                conditions:
                  - condition: state
                    entity: timer.blender
                    state: active
                card:
                  type: custom:timer-bar-card
                  entity: timer.blender
                  invert: true
                  bar_direction: rtl
                  bar_width: 60%
                  mushroom:
                    layout: vertical
                    color: "#A020F0"
              - type: conditional
                conditions:
                  - condition: state
                    entity: timer.sprinkler
                    state: active
                card:
                  type: custom:timer-bar-card
                  entity: timer.sprinkler
                  invert: true
                  bar_direction: rtl
                  bar_width: 60%
                  mushroom:
                    layout: vertical
                    color: "#4CBB17"
              - type: conditional
                conditions:
                  - condition: state
                    entity: timer.wash_duvet
                    state: idle
                card:
                  type: custom:timer-bar-card
                  entity: timer.wash_duvet
                  invert: true
                  bar_direction: rtl
                  bar_width: 60%
                  mushroom:
                    layout: vertical
                    color: "#f3c843"
          - type: custom:bubble-card
            card_type: separator
            styles: |-
              .bubble-icon,
              .bubble-name {
                display: none;
              }
              .bubble-line {
                margin-right: 0;
                height: 4px;
                max-width: 32px;
                opacity: 1;
                background: var(--md-sys-color-on-surface-variant);
              }
              .bubble-separator {
                height: min-content !important;
                justify-content: center;
              }
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: "#volcano-warning"
            margin_top_mobile: calc(96vh - 800px)
            name: Taupo Volcano Warning
            icon: m3of:mountain-steam
            styles: |-
              #root {
                      height: unset !important;
                      max-height: 100% !important;
                      transition: transform var(--md-sys-motion-expressive-spatial-default) !important;
                    }
                    .bubble-pop-up-container {
                      padding-bottom: 64px !important;

                    }
            bg_color: var(--card-background-color)
            button_type: name
          - type: markdown
            content: >
              {{ state_attr('sensor.volcano_taupo', 'activity') |
              default('No warnings') }}


              _Issued: {{
                as_datetime(state_attr('sensor.volcano_taupo', 'feed_last_update_successful')).astimezone().strftime('%I:%M%p %A, %d %b')
              }}_
            text_only: true
          - type: custom:bubble-card
            card_type: separator
            styles: |-
              .bubble-icon,
              .bubble-name {
                display: none;
              }
              .bubble-line {
                margin-right: 0;
                height: 4px;
                max-width: 32px;
                opacity: 1;
                background: var(--md-sys-color-on-surface-variant);
              }
              .bubble-separator {
                height: min-content !important;
                justify-content: center;
              }
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: "#earthquake-warning"
            margin_top_mobile: calc(96vh - 800px)
            name: Earthquake Warning
            icon: m3of:globe-location-pin
            styles: |-
              #root {
                      height: unset !important;
                      max-height: 100% !important;
                      transition: transform var(--md-sys-motion-expressive-spatial-default) !important;
                    }
                    .bubble-pop-up-container {
                      padding-bottom: 64px !important;


                    }
            bg_color: var(--card-background-color)
            button_type: name
          - type: vertical-stack
            cards:
              - type: custom:decluttering-card
                template: mushroom_title_card
                variables:
                  - title: Latest Earthquake
              - type: markdown
                content: >

                  {% set sensor = states.geo_location |
                  selectattr('attributes.source', 'defined') |
                  selectattr('attributes.source', 'eq', 'geonetnz_quakes') |
                  sort(attribute='last_updated', reverse=true) | list |
                  first %}

                  {% if sensor %}

                  **Locality:** {{ sensor.attributes.locality }}  

                  **Magnitude:** {{ sensor.attributes.magnitude | round(2)
                  }}

                  **Depth:** {{ sensor.attributes.depth }} km  

                  **Time:** {{ as_timestamp(sensor.attributes.time) |
                  timestamp_custom('%a, %b %-d at %I:%M %p') }}  

                  {% else %}

                  No recent earthquakes detected

                  {% endif %}
          - type: custom:auto-entities
            card:
              type: map
              default_zoom: 8
            filter:
              include:
                - options: {}
                  domain: geo_location
                  attributes:
                    source: geonetnz_quakes
            sort:
              method: last_updated
              reverse: true
              count: 1
          - type: custom:bubble-card
            card_type: separator
            styles: |-
              .bubble-icon,
              .bubble-name {
                display: none;
              }
              .bubble-line {
                margin-right: 0;
                height: 4px;
                max-width: 32px;
                opacity: 1;
                background: var(--md-sys-color-on-surface-variant);
              }
              .bubble-separator {
                height: min-content !important;
                justify-content: center;
              }
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: "#alarmo"
            margin_top_mobile: calc(96vh - 800px)
            name: Alarm
            icon: m3of:pin
            styles: |-
              #root {
                      height: unset !important;
                      max-height: 100% !important;
                      transition: transform var(--md-sys-motion-expressive-spatial-default) !important;
                    }
                    .bubble-pop-up-container {
                      padding-bottom: 64px !important;


                    }
            bg_color: var(--card-background-color)
            button_type: name
          - states:
              - arm_away
              - arm_night
            type: alarm-panel
            entity: alarm_control_panel.alarmo
            name: Alarmo
            theme: Material You
          - type: custom:bubble-card
            card_type: separator
            styles: |-
              .bubble-icon,
              .bubble-name {
                display: none;
              }
              .bubble-line {
                margin-right: 0;
                height: 4px;
                max-width: 32px;
                opacity: 1;
                background: var(--md-sys-color-on-surface-variant);
              }
              .bubble-separator {
                height: min-content !important;
                justify-content: center;
              }
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: "#weather"
            margin_top_mobile: calc(96vh - 800px)
            name: Weather
            icon: mdi:weather-partly-cloudy
            styles: |-
              #root {
                      height: unset !important;
                      max-height: 100% !important;
                      transition: transform var(--md-sys-motion-expressive-spatial-default) !important;
                    }
                    .bubble-pop-up-container {
                      padding-bottom: 64px !important;

                    }
            bg_color: var(--card-background-color)
            button_type: name
          - type: conditional
            conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity: sensor.home_metservice_weather_warnings
                    state: unavailable
                  - condition: state
                    entity: sensor.home_metservice_weather_warnings
                    state: unknown
            card:
              type: vertical-stack
              cards:
                - type: custom:decluttering-card
                  template: mushroom_title_subtitle_card
                  variables:
                    - title: Description
                    - subtitle: >-
                        {% set aqi =
                        states('sensor.morrinsville_college_new_zealand_air_quality_index')
                        %}{% set dominant_pollutant =
                        states('sensor.morrinsville_college_new_zealand_dominant_pollutant')
                        %}{% if aqi not in
                        ['unknown','unavailable','none',''] %}{% set aqi =
                        aqi | int %}{% set aqi_level = ('Good' if aqi <= 50
                        else 'Moderate' if aqi <= 100 else 'Unhealthy for
                        sensitive groups' if aqi <= 150 else 'Unhealthy' if
                        aqi <= 200 else 'Very Unhealthy' if aqi <= 300 else
                        'Hazardous') %}🌿 Air quality: {{ aqi_level }} (AQI:
                        {{ aqi }}) 😶‍🌫️ Pollutant: {{ dominant_pollutant
                        }}{% else %}🌿 Air quality data is currently
                        unavailable.{% endif %}
                - type: markdown
                  content: >
                    {{ states('sensor.home_weather_description') }} {{
                    states('sensor.home_pollen_type') }}
          - type: conditional
            conditions:
              - condition: and
                conditions:
                  - condition: state
                    entity: sensor.home_metservice_weather_warnings
                    state_not: unavailable
                  - condition: state
                    entity: sensor.home_metservice_weather_warnings
                    state_not: unknown
            card:
              type: vertical-stack
              cards:
                - type: custom:decluttering-card
                  template: mushroom_title_card
                  variables:
                    - title: Weather Warning
                - type: markdown
                  content: >2-

                          {{ state_attr('sensor.home_metservice_weather_warnings', 'warnings') | default('No warnings') }}

                        _Issued: {{
                        states.sensor.home_metservice_weather_warnings.last_changed.strftime('%I:%M%p
                        %A, %d %b') }}_
          - type: vertical-stack
            cards:
              - type: custom:decluttering-card
                template: mushroom_title_card
                variables:
                  - title: Lunar Phase
              - type: custom:lunar-phase-card
                entity: ""
                12hr_format: true
                calendar_modal: false
                compact_view: true
                default_card: base
                hide_buttons: false
                mile_unit: false
                moon_position: left
                number_decimals: 2
                selected_language: en
                show_background: false
                southern_hemisphere: false
                use_custom: false
                use_default: true
                use_entity: false
                graph_config:
                  graph_type: default
                  y_ticks: false
                  x_ticks: false
                  show_time: true
                  show_current: true
                  show_highest: true
                  y_ticks_position: left
                  y_ticks_step_size: 30
                  time_step_size: 30
                font_customize:
                  header_font_size: medium
                  header_font_style: capitalize
                  label_font_size: small
                  label_font_style: none
                  label_font_color: ""
                  hide_label: false
                latitude: your_lattitude
                longitude: your_longitude
                location:
                  city: ""
                  country: New Zealand
                theme:
                  selected_theme: Material You
                custom_background: >-
                  https://cdn.jsdelivr.net/gh/ngocjohn/lunar-phase-card@1.7.3/background/moon_bg_2.png
          - type: vertical-stack
            cards:
              - type: custom:decluttering-card
                template: mushroom_title_subtitle_card
                variables:
                  - title: Radar
                  - subtitle: >-
                      {% set weather =
                      states.weather.forecast_home.attributes %}{% set temp
                      = weather.temperature %}{% set temp_unit =
                      weather.temperature_unit %}{% set humidity =
                      weather.humidity %}{% set cloud =
                      weather.cloud_coverage %}{% set uv = weather.uv_index
                      %}{% set pressure = weather.pressure %}{% set
                      wind_speed = weather.wind_speed %}{% set wind_unit =
                      weather.wind_speed_unit %}🌡️ {{ temp }}{{ temp_unit
                      }} 💧 Humidity: {{ humidity }}% ☁️ Clouds: {{ cloud |
                      round }}% 💨 Wind: {{ wind_speed }} {{ wind_unit }}
                      🌤️ UV index: {{ uv }}
              - type: custom:mod-card
                card:
                  type: iframe
                  url: >-
                    https://embed.windy.com/embed2.html?your_lattitude&your_longitude&width=800&height=600
                style: |
                  ha-card {
                    padding: 0;
                    height: 400px !important;   /* fix height */
                    width: 100% !important;
                    overflow: hidden;
                  }
                  iframe {
                    width: 100% !important;
                    height: 100% !important;
                  }
          - type: custom:bubble-card
            card_type: separator
            styles: |-
              .bubble-icon,
              .bubble-name {
                display: none;
              }
              .bubble-line {
                margin-right: 0;
                height: 4px;
                max-width: 32px;
                opacity: 1;
                background: var(--md-sys-color-on-surface-variant);
              }
              .bubble-separator {
                height: min-content !important;
                justify-content: center;
              }
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: "#weather-warning"
            margin_top_mobile: calc(96vh - 800px)
            name: Weather Warning
            icon: m3of:warning
            styles: |-
              #root {
                      height: unset !important;
                      max-height: 100% !important;
                      transition: transform var(--md-sys-motion-expressive-spatial-default) !important;
                    }
                    .bubble-pop-up-container {
                      padding-bottom: 64px !important;

                    }
            bg_color: var(--card-background-color)
            button_type: name
          - type: markdown
            content: >2-

                    {{ state_attr('sensor.home_metservice_weather_warnings', 'warnings') | default('No warnings') }}

                  _Issued: {{
                  states.sensor.home_metservice_weather_warnings.last_changed.strftime('%I:%M%p
                  %A, %d %b') }}_
            text_only: true
          - type: custom:mushroom-chips-card
            chips:
              - type: template
                icon: mdi:weather-cloudy-arrow-right
                tap_action:
                  action: navigate
                  navigation_path: "#weather-forecast"
                content: Open Weather Forecast Panel
                card_mod:
                  style:
                    .: |
                      ha-card {
                        --text-color: {{ 'var(--primary-background-color)' }};
                        --color: {{ 'var(--md-sys-color-on-primary)'  }};
                        --chip-background: {{ 'var(--md-sys-color-primary)' }};
                      }
            alignment: center
          - type: custom:bubble-card
            card_type: separator
            styles: |-
              .bubble-icon,
              .bubble-name {
                display: none;
              }
              .bubble-line {
                margin-right: 0;
                height: 4px;
                max-width: 32px;
                opacity: 1;
                background: var(--md-sys-color-on-surface-variant);
              }
              .bubble-separator {
                height: min-content !important;
                justify-content: center;
              }
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: "#weather-forecast"
            margin_top_mobile: calc(96vh - 800px)
            name: Forecast
            icon: mdi:weather-cloudy-arrow-right
            styles: |-
              #root {
                      height: unset !important;
                      max-height: 100% !important;
                      transition: transform var(--md-sys-motion-expressive-spatial-default) !important;
                    }
                    .bubble-pop-up-container {
                      padding-bottom: 64px !important;
                      
                    }
            button_type: name
          - type: vertical-stack
            cards:
              - type: custom:decluttering-card
                template: mushroom_title_subtitle_card
                variables:
                  - title: Weather Forecast
                  - subtitle: >-
                      {% set forecasts =
                      state_attr('sensor.met_no_hourly_forecasts_full_hourly_forecast','forecasts')
                      %}{% if forecasts %}{% set rain_forecasts = forecasts
                      | selectattr('precipitation','defined') |
                      selectattr('precipitation','gt',0) | list %}{% if
                      rain_forecasts | count > 0 %}{% set next_rain =
                      rain_forecasts | first %}{% set val =
                      next_rain.precipitation | float %}{% if val < 2.5
                      %}🌦️ Light · {{ val | round(1) }} mm · {{
                      as_datetime(next_rain.datetime).strftime('%a, %b %d at
                      %I:%M %p') }}{% elif val < 7.6 %}🌧️ Moderate · {{ val
                      | round(1) }} mm · {{
                      as_datetime(next_rain.datetime).strftime('%a, %b %d at
                      %I:%M %p') }}{% elif val < 35 %}⛈️ Heavy · {{ val |
                      round(1) }} mm · {{
                      as_datetime(next_rain.datetime).strftime('%a, %b %d at
                      %I:%M %p') }}{% else %}⛈️ Very heavy · {{ val |
                      round(1) }} mm · {{
                      as_datetime(next_rain.datetime).strftime('%a, %b %d at
                      %I:%M %p') }}{% endif %}{% else %}🌤️ No rain today{%
                      endif %}{% else %}🌤️ N/A{% endif %}
              - type: custom:clock-weather-card-hui-icons
                entity: weather.met_service_home_forecast
                sun_entity: sun.sun
                temperature_sensor: sensor.outdoor_temperature
                humidity_sensor: sensor.outdoor_humidity
                forecast_rows: 5
                locale: en-NZ
                time_pattern: HH:mm
                time_format: 12
                date_pattern: ccc, d.MM.yy
                hide_today_section: false
                hide_forecast_section: false
                show_humidity: false
                hide_clock: false
                hide_date: false
                hourly_forecast: false
                use_browser_time: false
                time_zone: null
                show_decimal: false
          - type: vertical-stack
            cards:
              - type: custom:decluttering-card
                template: mushroom_title_subtitle_card
                variables:
                  - title: Rainfall & Temperature Forecast
                  - subtitle: >-
                      {% set forecasts =
                      state_attr('sensor.met_no_hourly_forecasts_full_hourly_forecast','forecasts')
                      %}{% if forecasts %}{% set values = forecasts |
                      map(attribute='precipitation') | map('float') | list
                      %}{% set total = values | sum %}{% set peak = values |
                      max %}{% set peak_entry = forecasts |
                      selectattr('precipitation','eq', peak) | list | first
                      %}{% if total == 0 %}🌤️ Rainfall: None expected in
                      the next 24 hours{% else %}{% if total < 2.5 %}{% set
                      category = 'Light' %}{% set emoji = '🌦️' %}{% elif
                      total < 7.6 %}{% set category = 'Moderate' %}{% set
                      emoji = '🌧️' %}{% elif total < 35 %}{% set category =
                      'Heavy' %}{% set emoji = '⛈️' %}{% else %}{% set
                      category = 'Very heavy' %}{% set emoji = '🌊' %}{%
                      endif %}{{ emoji }} Rainfall: {{ total | round(1) }}
                      mm ({{ category }}), peaking {{ peak | round(1) }}
                      mm/hr on {{
                      as_datetime(peak_entry.datetime).strftime('%a %I:%M
                      %p') }}.{% endif %}{% else %}🌤️ Rainfall: N/A{% endif
                      %}
              - type: custom:apexcharts-card
                header:
                  show: true
                graph_span: 24h
                span:
                  start: hour
                now:
                  show: true
                apex_config:
                  chart:
                    height: 235
                  legend:
                    show: false
                  grid:
                    yaxis:
                      lines:
                        show: false
                  xaxis:
                    crosshairs:
                      show: false
                    tooltip:
                      enabled: false
                  yaxis:
                    - id: rain
                      title:
                        text: Rain (mm)
                      opposite: false
                    - id: temp
                      title:
                        text: Temp (°C)
                      opposite: true
                      decimalsInFloat: 0
                series:
                  - entity: sensor.met_no_hourly_forecasts_full_hourly_forecast
                    name: Rain
                    type: column
                    yaxis_id: rain
                    data_generator: |
                      return entity.attributes.forecasts.map(f => {
                        let val = f.precipitation;
                        let color = '#9e9e9e';
                        if (val > 0 && val < 2.5) {
                          color = '#4FC3F7';
                        } else if (val < 7.6) {
                          color = '#0288D1';
                        } else if (val < 35) {
                          color = '#01579B';
                        } else {
                          color = '#311B92';
                        }
                        return {
                          x: new Date(f.datetime).getTime(),
                          y: val,
                          fillColor: color
                        };
                      });
                  - entity: sensor.met_no_hourly_forecasts_full_hourly_forecast
                    name: Temp
                    type: line
                    curve: smooth
                    yaxis_id: temp
                    stroke_width: 2
                    color: "#E53935"
                    data_generator: |
                      return entity.attributes.forecasts.map(f => {
                        return {
                          x: new Date(f.datetime).getTime(),
                          y: f.temperature
                        };
                      });
          - type: vertical-stack
            cards:
              - type: custom:decluttering-card
                template: mushroom_title_subtitle_card
                variables:
                  - title: Wind Speed & Direction Forecast
                  - subtitle: >-
                      {% set forecasts =
                      state_attr('sensor.met_no_hourly_forecasts_full_hourly_forecast','forecasts')
                      %}{% if forecasts %}{% set speeds = forecasts |
                      map(attribute='wind_speed') | map('float') | list %}{%
                      set peak = speeds | max %}{% set peak_entry =
                      forecasts | selectattr('wind_speed','eq', peak) | list
                      | first %}{% set avg_bearing = (forecasts |
                      map(attribute='wind_bearing') | list | sum / forecasts
                      | length) %}{% set direction =
                      ['N','NNE','NE','ENE','E','ESE','SE','SSE','S','SSW','SW','WSW','W','WNW','NW','NNW'][(avg_bearing
                      / 22.5) | round(0) % 16] %}{% if peak < 2 %}{% set
                      category = 'Calm' %}{% set emoji = '🌫️' %}{% elif
                      peak < 6 %}{% set category = 'Light breeze' %}{% set
                      emoji = '🍃' %}{% elif peak < 12 %}{% set category =
                      'Gentle breeze' %}{% set emoji = '🌿' %}{% elif peak <
                      20 %}{% set category = 'Moderate breeze' %}{% set
                      emoji = '🌬️' %}{% elif peak < 29 %}{% set category =
                      'Fresh breeze' %}{% set emoji = '💨' %}{% elif peak <
                      39 %}{% set category = 'Strong breeze' %}{% set emoji
                      = '💨' %}{% elif peak < 50 %}{% set category = 'Near
                      gale' %}{% set emoji = '🌪️' %}{% elif peak < 62 %}{%
                      set category = 'Gale' %}{% set emoji = '🌪️' %}{% elif
                      peak < 75 %}{% set category = 'Strong gale' %}{% set
                      emoji = '🌪️' %}{% else %}{% set category = 'Storm'
                      %}{% set emoji = '🌀' %}{% endif %}{{ emoji }} Winds:
                      {{ peak | round(1) }} km/h ({{ category }}), mostly
                      from {{ direction }}, peaking {{
                      as_datetime(peak_entry.datetime).strftime('%a %I:%M
                      %p') }}.{% else %}🌤️ Winds: N/A{% endif %}
              - type: custom:apexcharts-card
                graph_span: 24h
                span:
                  start: hour
                now:
                  show: true
                apex_config:
                  chart:
                    height: 240
                  legend:
                    show: false
                  grid:
                    yaxis:
                      lines:
                        show: false
                  xaxis:
                    crosshairs:
                      show: false
                    tooltip:
                      enabled: false
                  yaxis:
                    - id: speed
                      title:
                        text: Wind Speed (km/h)
                      opposite: false
                    - id: direction
                      title:
                        text: Direction (°)
                      opposite: true
                      min: 0
                      max: 360
                series:
                  - entity: sensor.met_no_hourly_forecasts_full_hourly_forecast
                    name: Speed
                    type: line
                    curve: smooth
                    yaxis_id: speed
                    color: "#0288D1"
                    stroke_width: 2
                    data_generator: |
                      return entity.attributes.forecasts.map(f => {
                        let speed = f.wind_speed;
                        speed = Math.round(speed * 10) / 10; // round to 1 decimal place
                        return { x: new Date(f.datetime).getTime(), y: speed };
                      });
                  - entity: sensor.met_no_hourly_forecasts_full_hourly_forecast
                    name: Direction
                    type: line
                    curve: smooth
                    yaxis_id: direction
                    color: "#8E24AA"
                    stroke_width: 1
                    data_generator: |
                      return entity.attributes.forecasts.map(f => {
                        let direction = Math.round(f.wind_bearing); // round to nearest integer
                        return { x: new Date(f.datetime).getTime(), y: direction };
                      });
          - type: custom:mushroom-chips-card
            chips:
              - type: template
                icon: mdi:weather-partly-cloudy
                tap_action:
                  action: navigate
                  navigation_path: "#weather"
                content: Open Weather Panel
                card_mod:
                  style:
                    .: |
                      ha-card {
                        --text-color: {{ 'var(--primary-background-color)' }};
                        --color: {{ 'var(--md-sys-color-on-primary)'  }};
                        --chip-background: {{ 'var(--md-sys-color-primary)' }};
                      }
            alignment: center
          - type: custom:bubble-card
            card_type: separator
            styles: |-
              .bubble-icon,
              .bubble-name {
                display: none;
              }
              .bubble-line {
                margin-right: 0;
                height: 4px;
                max-width: 32px;
                opacity: 1;
                background: var(--md-sys-color-on-surface-variant);
              }
              .bubble-separator {
                height: min-content !important;
                justify-content: center;
              }
  - type: grid
    cards:
      - type: custom:navbar-card
        mobile:
          show_labels: true
        desktop:
          show_labels: true
          position: left
          min_width: 768
          show_popup_label_backgrounds: false
        routes:
          - url: /test-material-3/overview
            label: Home
            icon: m3o:home
            icon_selected: m3of:home
          - url: /test-material-3/rooms
            label: Rooms
            icon: m3o:chair
            icon_selected: m3of:chair
            tap_action:
              action: navigate
              navigation_path: /test-material-3/rooms
            hold_action:
              action: open-popup
            popup:
              - icon: m3of:computer
                url: /test-material-3/buro
              - icon: m3of:chair
                url: /test-material-3/wohnzimmer
              - icon: m3of:bed
                url: /test-material-3/schlafzimmer
              - icon: m3of:restaurant
                url: /test-material-3/esszimmer
              - icon: m3of:person-3
                url: /test-material-3/kinderzimmer
              - icon: m3of:groups-2
                url: /test-material-3/gang
          - url: /test-material-3/scenes
            label: Scenes
            icon: m3o:layers
            icon_selected: m3of:layers
          - icon: mdi:dots-horizontal
            label: More
            tap_action:
              action: open-popup
            popup:
              - icon: m3of:tools-wrench
                url: /config/dashboard
              - icon: m3of:colors
                url: /material-you-configuration
              - icon: m3of:server-person
                url: /test-material-3/server
              - icon: m3of:power-settings-new
                tap_action:
                  action: call-service
                  service: homeassistant.restart
                  service_data: {}
                  confirmation:
                    text: Are you sure you want to restart Home Assistant?
        styles: |
          .navbar-card {
            --navbar-primary-color: var(--md-sys-color-tertiary);
            background: var(--nav-background);
            backdrop-filter: blur(50px);
            -webkit-backdrop-filter: blur(20px) !important;
            background-blend-mode: overlay;
            border-radius: 20px;
            box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);
            margin-bottom: 15px;
            overflow: hidden;
          }
        media_player:
          entity: media_player.your_media_entity
          album_cover_background: true
header:
  card:
    type: horizontal-stack
    cards:
      - type: custom:decluttering-card
        template: mushroom_overview_card
        variables:
          - subtitle: "{{ now().strftime('%a %b %-d - %I:%M %p') }}"
      - type: custom:mushroom-chips-card
        chips:
          - type: conditional
            conditions:
              - condition: state
                entity: sensor.latest_nearby_quake
                state_not: No quake
            chip:
              type: template
              entity: sensor.latest_nearby_quake
              tap_action:
                action: navigate
                navigation_path: "#earthquake-warning"
              icon: m3of:globe-location-pin
              icon_color: >
                {% set mag = state_attr('sensor.latest_nearby_quake',
                'magnitude') | float(0) %} {% if mag >= 6.0 %} #D32F2F {%
                elif mag >= 5.0 %} #F4511E {% elif mag >= 4.0 %} #FB8C00 {%
                elif mag >= 3.0 %} #F9A825 {% elif mag >= 2.0 %} #FBC02D {%
                else %} #388E3C {% endif %}
          - type: conditional
            conditions:
              - condition: numeric_state
                entity: sensor.volcano_rotorua
                above: 0
            chip:
              type: template
              entity: sensor.volcano_rotorua
              tap_action:
                action: navigate
                navigation_path: "#volcano-warning"
              icon: m3of:mountain-steam
              icon_color: |
                {% set level = states('sensor.volcano_rotorua') | int %}
                {% if level == 5 %} red
                {% elif level == 4 %} deep-orange
                {% elif level == 3 %} orange
                {% elif level == 2 %} amber
                {% elif level == 1 %} yellow
                {% else %} green
                {% endif %}
          - type: conditional
            conditions:
              - condition: state
                entity: sensor.home_metservice_weather_warnings
                state_not: unknown
            chip:
              type: template
              entity: sensor.home_metservice_weather_warnings
              tap_action:
                action: navigate
                navigation_path: "#weather-warning"
              icon: m3of:warning
              icon_color: orange
          - type: conditional
            conditions:
              - entity: alarm_control_panel.alarmo
                state: triggered
            chip:
              type: template
              entity: alarm_control_panel.alarmo
              content: Triggered
              tap_action:
                action: navigate
                navigation_path: "#alarmo"
              icon: m3of:notifications-active
              icon_color: "#d14f3a"
          - type: conditional
            conditions:
              - entity: alarm_control_panel.alarmo
                state: armed_away
            chip:
              type: template
              entity: alarm_control_panel.alarmo
              content: Armed away
              tap_action:
                action: navigate
                navigation_path: "#alarmo"
              icon: mdi:shield-lock
              icon_color: "#69ac5a"
          - type: conditional
            conditions:
              - entity: alarm_control_panel.alarmo
                state: arming
            chip:
              type: template
              entity: alarm_control_panel.alarmo
              content: Arming
              tap_action:
                action: navigate
                navigation_path: "#alarmo"
              icon: mdi:shield
              icon_color: "#efa340"
          - type: conditional
            conditions:
              - entity: alarm_control_panel.alarmo
                state: pending
            chip:
              type: template
              entity: alarm_control_panel.alarmo
              content: Pending
              tap_action:
                action: navigate
                navigation_path: "#alarmo"
              icon: mdi:shield-outline
              icon_color: "#efa340"
          - type: conditional
            conditions:
              - entity: alarm_control_panel.alarmo
                state: disarmed
            chip:
              type: template
              entity: alarm_control_panel.alarmo
              tap_action:
                action: navigate
                navigation_path: "#alarmo"
              icon: mdi:shield-off
              icon_color: "#disarmed"
          - type: template
            entity: sensor.active_notification_count
            icon: m3of:notifications
            tap_action:
              action: navigate
              navigation_path: "#notifications"
            hold_action:
              action: none
            card_mod:
              style: >
                ha-card {
                  position: relative;
                }


                {% set notifications =
                states('sensor.active_notification_count') | int %}

                {% if notifications > 0 %}

                ha-card:after {
                  content: "{{ notifications }}";
                  position: absolute;
                  top: -3px;
                  right: -3px;
                  background-color: var(--md-sys-color-primary);
                  color: var(--md-sys-color-on-primary);
                  border-radius: 50%;
                  width: 16px;
                  height: 16px;
                  font-size: 10px;
                  line-height: 16px;
                  text-align: center;
                  display: inline-block;
                  font-weight: bold;
                } {% endif %}
        alignment: end
        card_mod:
          style: |
            ha-card {
              margin-top: 1.2em
            }
  layout: responsive
  badges_position: bottom
  badges_wrap: wrap