kiosk_mode:
  mobile_settings:
    hide_header: true
    ignore_entity_settings: false
    custom_width: 768
swipe_nav:
  animate: swipe
  enable_on_subviews: false
button_card_templates:
  scene_button:
    layout: icon_name
    variables:
      - scene: ""
    tap_action:
      action: call-service
      service: scene.turn_on
      data:
        entity_id: "[[[scene]]]"
    styles:
      name:
        - color: var(--gray800)
      button:
        - padding: 12px
        - width: 90px
        - height: 76px
        - flex-basis: 1
        - flex-shrink: 0
        - display: flex
        - background-color: var(--popupBG)
        - border-radius: 24px
      icon:
        - "--mdc-icon-size": 26px
        - color: var(--gray800)
decluttering_templates:
  mushroom_title_card:
    default:
      - title: ""
    card:
      type: custom:mushroom-title-card
      title: "[[title]]"
      card_mod:
        style: |
          ha-card {
            --title-font-size: 20px !important;
          }
  mushroom_room_title_card:
    default:
      - title: ""
    card:
      type: custom:mushroom-title-card
      title: "[[title]]"
      card_mod:
        style: |
          ha-card {
            --title-font-size: 35px !important;
          }
  mushroom_title_subtitle_card:
    default:
      title: ""
      subtitle: ""
    card:
      type: custom:mushroom-title-card
      title: "[[title]]"
      subtitle: "[[subtitle]]"
      card_mod:
        style: |
          ha-card {
            --title-font-size: 20px !important;
            --subtitle-font-size: 14px !important;
          }
  mushroom_overview_card:
    default:
      title: ""
      subtitle: ""
    card:
      type: custom:mushroom-title-card
      title: "[[title]]"
      subtitle: "[[subtitle]]"
      card_mod:
        style: |
          ha-card {
            --subtitle-font-size: 13px !important;
          }
  temperature_entity:
    default:
      - title: ""
    card:
      type: entities
      card_mod:
        style: |
          ha-card {
            border-radius: 16px;      /* rounded card */
            overflow: hidden;         /* clip row backgrounds */
            padding: 0;               /* remove default gaps */
          }
          .card-content {
            padding: 0 !important;    /* kill inner padding */
          }
      entities:
        - entity: "[[entity]]"
          name: "[[name]]"
          icon: "[[icon]]"
          card_mod:
            style: |
              hui-generic-entity-row {
                {% set temp = states('[[entity]]') | float %}
                {% set percent = ((temp + 10) / 50 * 100) | round(1) %}
                {% if temp < 16 %}
                  {% set rgb_light = '206,178,245' %}
                  {% set rgb_dark = '156,128,195' %}
                {% elif temp < 19 %}
                  {% set rgb_light = '163,217,245' %}
                  {% set rgb_dark = '113,167,195' %}
                {% elif temp < 22 %}
                  {% set rgb_light = '205,227,219' %}
                  {% set rgb_dark = '155,177,169' %}
                {% elif temp < 24 %}
                  {% set rgb_light = '251,217,160' %}
                  {% set rgb_dark = '201,167,110' %}
                {% elif temp < 27 %}
                  {% set rgb_light = '244,168,163' %}
                  {% set rgb_dark = '194,118,113' %}
                {% else %}
                  {% set rgb_light = '223,123,116' %}
                  {% set rgb_dark = '173,73,66' %}
                {% endif %}

                --rgb: {{ rgb_light }};
                --text-color: black !important;
                @media (prefers-color-scheme: dark) {
                  --rgb: {{ rgb_dark }};
                  --text-color: white !important;
                }

                background: linear-gradient(
                  95deg,
                  rgba(var(--rgb), 0.45) 0%,
                  rgba(var(--rgb), 0.45) {{percent}}%,
                  rgba(var(--rgb), 0.85) {{percent}}%,
                  rgba(12,14,18,0.42) 100%
                ),
                linear-gradient(
                  120deg,
                  rgba(255,255,255,0.02) 7%,
                  rgba(255,255,255,0.01) 13%,
                  rgba(255,255,255,0.00) 38%,
                  rgba(255,255,255,0.01) 47%,
                  rgba(255,255,255,0.00) 70%,
                  rgba(255,255,255,0.02) 82%,
                  rgba(255,255,255,0.00) 100%
                ),
                repeating-linear-gradient(
                  100deg,
                  rgba(255,255,255,0.011) 0 2px,
                  rgba(0,0,0,0.015) 2px 6px
                );
                
                /* Rounded corners */
                border-radius: 12px !important;
                margin: 4px 0 !important;
                overflow: hidden !important;
                
                /* Push value to the left */
                padding-right: 12px !important;   /* adds space on the right so the number is not cut */
              }
  humidity_entity:
    default:
      - title: ""
    card:
      type: entities
      card_mod:
        style: |
          ha-card {
            border-radius: 16px;      /* rounded card */
            overflow: hidden;         /* clip row backgrounds */
            padding: 0;               /* remove default gaps */
          }
          .card-content {
            padding: 0 !important;    /* kill inner padding */
          }
      entities:
        - entity: "[[entity]]"
          name: "[[name]]"
          icon: "[[icon]]"
          card_mod:
            style: |
              hui-generic-entity-row {
                {% set hum = states(config.entity) | float %}
                {% set percent = (hum if hum <= 100 else 100) | round(1) %}
                {% if hum < 31 %}
                  {% set rgb = '153,51,45' %}
                {% elif hum < 51 %}
                  {% set rgb = '34,139,34' %}
                {% else %}
                  {% set rgb = '153,51,45' %}
                {% endif %}

                --text-color: black !important;
                @media (prefers-color-scheme: dark) {
                  --text-color: white !important;
                }

                background:
                  linear-gradient(95deg,
                    rgba({{rgb}},0.13) 0%,
                    rgba({{rgb}},0.13) {{percent}}%,
                    rgba({{rgb}},0.55) {{percent}}%,
                    rgba(12,14,18,0.42) 100%
                  ),
                  linear-gradient(120deg, 
                    rgba(255,255,255,0.11) 7%, 
                    rgba(255,255,255,0.06) 13%, 
                    rgba(255,255,255,0.00) 38%,
                    rgba(255,255,255,0.08) 47%, 
                    rgba(255,255,255,0.00) 70%,
                    rgba(255,255,255,0.09) 82%,
                    rgba(255,255,255,0.00) 100%
                  ),
                  repeating-linear-gradient(100deg, rgba(255,255,255,0.011) 0 2px, rgba(0,0,0,0.015) 2px 6px);

                /* Rounded corners */
                border-radius: 12px !important;
                margin: 4px 0 !important;
                overflow: hidden !important;

                /* Push value to the left */
                padding-right: 12px !important;   /* adds space on the right so the number is not cut */                
              }
  room_summary_card:
    description: Primary room info (name + temp/humidity)
    variables:
      - room_name
      - temperature_sensor
      - humidity_sensor
      - navigation_path
    card:
      type: custom:mushroom-template-card
      primary: "[[room_name]]"
      secondary: >-
        {{ states('[[temperature_sensor]]') | round(1) }}Â°C / {{
        states('[[humidity_sensor]]') | round(1) }}%
      tap_action:
        action: navigate
        navigation_path: "[[navigation_path]]"
      hold_action:
        action: none
      double_tap_action:
        action: none
      card_mod:
        style:
          .: |
            ha-card {
              --primary-text-color: black;
              border: 0px;
              padding-left: 5px;
              padding-top: 5px;
              width: 500px;
            }
          mushroom-state-info$: |
            .container {
              --card-primary-color: var(--primary-text-color);
              --card-secondary-color: var(--primary-text-color);
            }
  big_icon_toggle_card:
    description: Large horizontal icon toggle for switch/light
    variables:
      - entity
      - icon
    card:
      type: custom:mushroom-template-card
      entity: "[[entity]]"
      layout: horizontal
      icon: "[[icon]]"
      icon_color: |-
        {% if is_state(entity, 'on') %} 
          #ecce85
        {% else %}
          #5b5b5b
        {% endif %}
      tap_action:
        action: toggle
      hold_action:
        action: none
      double_tap_action:
        action: none
      primary_info: none
      secondary_info: none
      card_mod:
        style:
          ha-tile-icon$: |
            .container {
              border: 0px;
              width: 120px !important;
              height: 120px !important;
              border-radius: 50% !important;
                }
          .: |
            ha-tile-icon {
              --mdc-icon-size: 90px !important;
               }
            ha-card {
              border: none;
              margin-top: -8px !important;
              margin-left: -24px !important;
               }
  media_player_card:
    default:
      - icon: m3of:play-circle
      - name: Media Player
      - tap_action: none
    card:
      type: custom:stack-in-card
      cards:
        - type: custom:mushroom-media-player-card
          entity: "[[entity]]"
          icon: "[[icon]]"
          name: "[[name]]"
          use_media_info: true
          use_media_artwork: false
          show_volume_level: false
          media_controls:
            - play_pause_stop
            - previous
            - next
          volume_controls:
            - volume_buttons
            - volume_set
          fill_container: false
          collapsible_controls: true
          tap_action:
            action: "[[tap_action]]"
          layout: vertical
          card_mod:
            style:
              mushroom-media-player-volume-control$: |
                mushroom-slider {
                  --main-color: var(--md-sys-color-primary) !important;
                  --bg-color: color-mix(in srgb, var(--md-sys-color-primary) 70%, transparent) !important;
                }
              .: |
                mushroom-shape-icon {
                  display: flex;
                  {% set media_type = state_attr(config.entity, 'media_content_type') %}
                  {% if media_type == 'tvshow' %}
                    --card-mod-icon: m3of:comedy_mask;
                    animation: beat 1.3s ease-out infinite both;
                  {% elif media_type == 'movie' %}
                    --card-mod-icon: m3of:movie;
                    animation: beat 1.3s ease-out infinite both;
                  {% elif media_type == 'music' %}
                    --card-mod-icon: m3of:music-note;
                    animation: beat 1.3s ease-out infinite both;
                  {% elif media_type == 'playlist' %}
                    --card-mod-icon: m3of:music-note;
                    animation: beat 1.3s ease-out infinite both;
                  {% else %}
                    --card-mod-icon: m3of:play-circle;
                  {% endif %}

                  {{ 'animation: none;' if not is_state(config.entity, 'playing') }}

                }
                @keyframes flicker {
                  0%, 31.98%, 32.98%, 34.98%, 36.98%, 39.98%, 67.98%, 68.98%, 95.98%, 96.98%, 97.98%, 98.98%, 100% { --icon-color: rgba(var(--album-art-color), 1); }
                  32%, 33%, 35%, 36%, 37%, 40%, 68%, 69%, 96%, 97%, 98%, 99% { --icon-color: rgba(var(--album-art-color), 0.6); }
                }
                @keyframes beat {
                  0%, 60% { --icon-symbol-size: 21px; }
                  5%, 17%, 57% { --icon-symbol-size: 22px; }
                  10%, 20%, 51% { --icon-symbol-size: 23px; }
                  25%, 45% { --icon-symbol-size: 24px; }
                  30%, 39% { --icon-symbol-size: 25px; }
                  33% { --icon-symbol-size: 26px; }
                }
                .: |
                  mushroom-shape-icon {

                    /* Change media player icon based on media type */
                    {% set media_type = state_attr(config.entity, 'media_content_type') %}
                    --card-mod-icon:
                    {% if media_type == 'tvshow' %}
                       m3of:comedy_mask
                    {% elif media_type == 'movie' %}
                      m3of:movie
                    {% elif media_type == 'music' %}
                      m3of:music-note
                    {% elif media_type == 'playlist' %}
                      m3of:music-note
                    {% else %}
                      m3of:play-circle
                    {% endif %};
                  }
                  ha-card {

                    /* Remove border from media player */
                    --ha-card-border-width: 0;

                    /* Apply album art color to media player icon & volume bar */
                    --rgb-state-media-player: var(--album-art-color);

                    /* Disable transitions */
                    transition: all 0s;
                  }
                  .actions {

                    /* Apply to controls only when active */
                    {% if is_state(config.entity, ['playing', 'paused']) %}

                      /* Apply album art color to media player controls */
                      --rgb-primary-text-color: var(--rgb-primary-text-color);
                      --primary-text-color: var(--rgb-primary-text-color);

                      /* Add space for progress bar */
                      padding-top: 24px;
                    {% endif %}
                  }
        - entity: "[[entity]]"
          hide:
            icon: true
            name: true
            runtime: true
            source: true
            power: true
            state_label: true
            volume: true
            info: true
            progress: false
            controls: true
          more_info: false
          type: custom:mini-media-player
          toggle_power: false
          group: true
          card_mod:
            style: |
              ha-card {
                
                /* Move progress bar up into gap */
                bottom: calc(3 * var(--mush-spacing, 12px) + var(--mush-control-height, -25px));
                
                /* Correct margins for progress bar */
                margin: 0px calc(1.618 * var(--mush-spacing, 12px)) calc(-1 * var(--mush-spacing, 12px));

                /* Set height of card to match pregress bar height */
                height: var(--mmp-progress-height);

                /* Remove border outline */
                --ha-card-border-width: 0;

                /* Round corners of progress bar */
                --mmp-border-radius: var(--control-border-radius, 12px) !important;

                /* Set height of progress bar */
                --mmp-progress-height: var(--mush-spacing, 12px) !important;

                /* Make progress bar adjust to use dynamic theming */
                --mmp-accent-color: var(--md-sys-color-tertiary) !important;

                /* Remove transitions to prevent progress bar floating in */
                transition: all 0s;
              }
      card_mod:
        style: |
          ha-card:before {
            content: "";
            
            /* Position and size background color */
            position: absolute;
            height: 100%;
            width: 100%;

            /* Apply background to media player using album art color */
            {% if is_state('[[entity]]', ['playing', 'paused']) %}
              background: color-mix(in srgb, var(--md-sys-color-on-primary) 50%, transparent);
            {% endif %}
            
          }
          ha-card {

            /* Apply blended album art background */
            {% if is_state('[[entity]]', ['playing', 'paused']) %}
              background: url( '{{ state_attr("[[entity]]", "entity_picture") }}' ) no-repeat, 
                          linear-gradient(to left, transparent, rgb(var(--rgb-card-background-color)) 70%);

              /* Adjust for different aspect ratio of TV shows episode art */
              {% if state_attr('[[entity]]', 'media_content_type') == 'tvshow' %}
                background-size: 50% 100%, cover;
              {% else %}
                background-size: 50% auto, cover;
              {% endif %}

              /* Position art on right side */
              background-position: right;

              /* Blend art with background using saturation */
              background-blend-mode: saturation;
            {% endif %}
          }
views:
  # !include lÃ¤dt die Liste der Ansichten aus einer separaten Datei
  !include views/main_views.yaml
